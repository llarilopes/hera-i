version: '3.8'

services:
  frontend:
    image: node:20
    working_dir: /app
    user: "${UID}:${GID}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/storage
      - /var/www/html/bootstrap/cache
    depends_on:
      - db
    ports:
      - "8000:80"
    environment:
      APP_ENV: local
      APP_DEBUG: 'true'
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: '3306'
      DB_DATABASE: hera_i_db
      DB_USERNAME: hera_user
      DB_PASSWORD: hera_pass
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      APACHE_DOCUMENT_ROOT: /var/www/html/public
    command: >
      sh -c "composer update --no-dev --optimize-autoloader --no-interaction --prefer-dist \
      && mkdir -p storage/logs bootstrap/cache \
      && chown -R www-data:www-data storage bootstrap/cache \
      && docker-php-entrypoint apache2-foreground"

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: hera_i_db
      MYSQL_USER: hera_user
      MYSQL_PASSWORD: hera_pass
      MYSQL_ROOT_PASSWORD: hera_pass
    volumes:
      - ./db_data:/var/lib/mysql
    ports:
      - "3306:3306"

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
